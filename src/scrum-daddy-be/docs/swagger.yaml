definitions:
  api.CreateResponse:
    properties:
      id: {}
    type: object
  dto.PokerRoomDto:
    properties:
      id:
        type: string
      name:
        type: string
      ownerId:
        type: string
    type: object
  pokerplanning.CreateRoomRequest:
    properties:
      autoReveal:
        type: boolean
      isAllReveal:
        type: boolean
      name:
        type: string
      ownerId:
        type: string
      showAverage:
        type: boolean
      votingSystem:
        type: string
    type: object
  results.ErrType:
    enum:
    - Validation error
    - Entity Not Found
    type: string
    x-enum-varnames:
    - ValidationErrType
    - NotFoundErrType
  results.ErrorResult:
    properties:
      code:
        type: integer
      detail:
        type: string
      timeStamp:
        type: string
      title:
        type: string
      type:
        $ref: '#/definitions/results.ErrType'
    type: object
info:
  contact: {}
paths:
  /api/v1/rooms:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.PokerRoomDto'
      security:
      - ApiKeyAuth: []
      tags:
      - rooms
    post:
      consumes:
      - application/json
      parameters:
      - description: Create Room Request
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/pokerplanning.CreateRoomRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.CreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/results.ErrorResult'
      tags:
      - rooms
  /api/v1/rooms/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.PokerRoomDto'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/results.ErrorResult'
      tags:
      - rooms
  /api/v1/rooms/secondary/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Room Secondary ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.PokerRoomDto'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/results.ErrorResult'
      tags:
      - rooms
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: X-Api-Key
    type: apiKey
swagger: "2.0"
